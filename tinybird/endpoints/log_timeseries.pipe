TOKEN read_pipes READ

NODE day_intervals
SQL >

    %
    WITH
        toStartOfDay(toDateTime64({{ DateTime(start_date) }}, 3),
            {{ String(timezone, 'UTC') }}) AS start,
        toStartOfDay(toDateTime64({{ DateTime(end_date) }}, 3),
            {{ String(timezone, 'UTC') }}) AS end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toDateTime64(toStartOfDay(toDateTime64(x, 3)), 3),
                range(toUInt32(start + 86400), toUInt32(end + 86400),
                86400
            )
        )
    ) as date


NODE hour_intervals
SQL >

    %
    WITH
        toStartOfHour(toDateTime64({{ DateTime(start_date) }}, 3),
            {{ String(timezone, 'UTC') }}) AS start,
        toStartOfHour(toDateTime64({{ DateTime(end_date) }}, 3),
            {{ String(timezone, 'UTC') }}) AS end
    SELECT
        arrayJoin(
            arrayMap(x -> toDateTime64(x, 3), range(toUInt32(start + 3600), toUInt32(end + 3600), 3600)
        )
    ) as date


NODE minute_intervals
SQL >
    %
    WITH
        toStartOfMinute(toDateTime64({{ DateTime(start_date) }}, 3),
            {{ String(timezone, 'UTC') }}) AS start,
        toStartOfMinute(toDateTime64({{ DateTime(end_date) }}, 3),
            {{ String(timezone, 'UTC') }}) AS end
    SELECT
        arrayJoin(
            arrayMap(x -> toDateTime64(x, 3), range(toUInt32(start + 60), toUInt32(end + 60), 60)
        )
    ) as date


NODE error_monitoring_node
SQL >
    %
    {% if date_diff_in_hours(start_date, end_date) <= 24 * 7 %}
        {% if defined(description) and description != '' %}
            with {{split_to_array(String(description, ''), separator='|')}} as description_patterns
        {% end %}
    {% end %}
    SELECT
        {% if date_diff_in_hours(start_date, end_date) >= 24 * 10 %}
            date,
        {% elif date_diff_in_hours(start_date, end_date) < 24 * 10 and date_diff_in_hours(start_date, end_date) > 24 * 1 %}
            toStartOfInterval(timestamp, INTERVAL 2 hour) as date,
        {% elif date_diff_in_hours(start_date, end_date) < 24 * 1 and date_diff_in_hours(start_date, end_date) > 3 %}
            toStartOfHour(timestamp) as date,
        {% else %}
            toStartOfMinute(timestamp) as date,
        {% end %}
        {% if date_diff_in_hours(start_date, end_date) >= 24 * 10 %}
            countMerge(error_count) as error_count,
            {% if defined(description) and description != '' %}
                countMerge(total_requests) as total_requests
            {% else %}
                0 as total_requests
            {% end %}
        {% else %}
            countIf(description ilike '%ailed%' or description ilike '%error%' or description ilike '%exception%' or description ilike '%fail%' or description ilike '%error%' or description ilike '%exception%' or description ilike '%fail%') as error_count,
            count() as total_requests
        {% end %}
    FROM
    {% if date_diff_in_hours(start_date, end_date) >= 24 * 10 %}
        logs_daily_timeseries
    {% else %}
        logs
    {% end %}
    WHERE 1=1
    {% if date_diff_in_hours(start_date, end_date) >= 24 * 10 %}
        AND date >= {{DateTime(start_date)}}
        AND date <= {{DateTime(end_date)}}
    {% else %}
        AND timestamp >= {{DateTime(start_date)}}
        AND timestamp <= {{DateTime(end_date)}}
    {% end %}
    {% if defined(tenant_name) and tenant_name != [''] %}
        AND tenant_name in {{Array(tenant_name)}}
    {% end %}
    {% if defined(client_name) and client_name != [''] %}
        AND client_name in {{Array(client_name)}}
    {% end %}
    {% if defined(user_name) and user_name != [''] %}
        AND user_name in {{Array(user_name)}}
    {% end %}
    {% if defined(user_agent) and user_agent != [''] %}
        AND user_agent in {{Array(user_agent)}}
    {% end %}
    {% if defined(hostname) and hostname != [''] %}
        AND hostname in {{Array(hostname)}}
    {% end %}
    {% if defined(description) and description != '' %}
        AND description in {{Array(description)}}
    {% end %}
    {% if defined(connection) and connection != [''] %}
        AND connection in {{Array(connection)}}
    {% end %}
    {% if defined(strategy) and strategy != [''] %}
        AND strategy in {{Array(strategy)}}
    {% end %}
    {% if defined(strategy_type) and strategy_type != [''] %}
        AND strategy_type in {{Array(strategy_type)}}
    {% end %}
    {% if date_diff_in_hours(start_date, end_date) <= 24 * 7 %}
        {% if defined(description) and description != '' %}
            AND multiSearchAnyCaseInsensitive(description, {{split_to_array(String(description, ''), separator='|')}})
        {% end %}
    {% end %}
    GROUP BY date
    ORDER BY date


NODE endpoint
SQL >
    %
    {% if not defined(start_date) %}
      {{ error('start_date (DateTime) query param is required') }}
    {% end %}
    {% if not defined(end_date) %}
      {{ error('end_date (DateTime) query param is required') }}
    {% end %}
    SELECT
        date,
        error_count,
        total_requests
    FROM
    {% if date_diff_in_hours(start_date, end_date) >= 24 * 10 %}
        day_intervals
    {% elif date_diff_in_hours(start_date, end_date) > 3 %}
        hour_intervals
    {% else %}
        minute_intervals
    {% end %}
    LEFT JOIN error_monitoring_node
    USING date


TYPE endpoint
        